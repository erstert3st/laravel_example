services:
  apache:
    image: serversideup/php:8.4-fpm-apache #https://serversideup.net/open-source/docker-php/docs/getting-started/these-images-vs-others
    restart: on-failure
    container_name: apache
    volumes:
      - ./web/hello/:/var/www/html/public
      - ./config/apache/http.conf:/etc/apache2/vhost-templates/http.conf
      - ../../.data/apache:/var/log/apache2
    ports:
      - "8080:8080"
      - "9000:9000" # move to seperate network 
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/healthcheck" ]
      interval: 1s
      start_period: 10s
      timeout: 10s
      retries: 5
    # env_file:
    environment:
      - LOG_OUTPUT_LEVEL=info
      # - APACHE_STATUS_URL=http://localhost:8080/server-status?auto  
    #dockerdocker run -v /home/user-debian/alloy_test/alloy/example/web/hello:/var/www/html/public  -v /home/user-debian/alloy_test/alloy/example/config/web/apache/status.conf:/etc/apache2/conf-available/status.conf  -v /home/user-debian/alloy_test/alloy/example/config/web/apache/http.conf:/etc/apache2/vhost-templates/http.conf -p 8080:8080  --name web -d   serversideup/php:8.4-fpm-apache

  ################  MODSEC  ###############################  MODSEC  #########################  
  #https://github.com/coreruleset/modsecurity-crs-docker
  modsecurity-waf:
    image: owasp/modsecurity-crs:apache
    container_name: modsecurity-waf
    environment:
      BACKEND: http://apache:8080          # Link to backend container
      MODSEC_RULE_ENGINE: On              # Options: On | DetectionOnly | Off
      PARANOIA: 4                       
      TZ: "UTC"
     #/var/log/modsec_audit.log  
     #MODSEC_AUDIT_LOG: /usr/local/apache2/logs
      MODSEC_AUDIT_LOG: /var/log/modsec_audit.log  
      MODSEC_AUDIT_ENGINE: on
    volumes:
      - modsec-logs:/var/log
    ports:
      - "80:80"
      - "81:8080"
    depends_on:
      - apache

  #################  Testing  ################################  Testing  #########################
  testing:
    image: nicolaka/netshoot:v0.13
    container_name: testing
    depends_on:
      - modsecurity-waf
    entrypoint: ["sleep", "infinity"]
    volumes:
      - ../../.data/apache:/testing/apache
      - modsec-logs:/testing/modsec
      - fail2ban-logs:/testing/fail2ban
      - geoip:/testing/geoip


  ################ Fail2Ban  ################################  Fail2Ban  #########################   https://hub.docker.com/r/linuxserver/fail2ban
  #alternative with more downloads https://github.com/crazy-max/docker-fail2ban <- more downloads!

  fail2ban:
    # image: lscr.io/linuxserver/fail2ban:latest
    image: lscr.io/linuxserver/fail2ban:1.1.0
    container_name: fail2ban
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network_mode: host
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Etc/UTC
      - VERBOSITY=-vv #optional
      # - F2B_LOG_LEVEL=INFO
      # - F2B_DB_PURGE_AGE=1d
      # - F2B_MAX_RETRY=3
    volumes:
      - ./config/fail2ban:/config
      - ../../.data/apache:/remotelogs/apache2:ro
      - modsec-logs:/remotelogs/modsec:ro
      - fail2ban-logs:/config/log/fail2ban
      - /var/log:/var/log:ro # not needed for now







  # TODO
#   Umask for running applications

# For all of our images we provide the ability to override the default umask settings for services started within the containers using the optional -e UMASK=022 setting. Keep in mind umask is not chmod it subtracts from permissions based on it's value it does not add. Please read up here⁠

# before asking for support.
# User / Group Identifiers

# When using volumes (-v flags), permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user PUID and group PGID.

# Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.

# In this instance PUID=1000 and PGID=1000, to find yours use id your_user as below:

# id your_user

# Example output:

# uid=1000(your_user) gid=1000(your_user) groups=1000(your_user)

